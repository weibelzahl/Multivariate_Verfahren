- Class: meta
  Course: Multivariate Verfahren
  Lesson: Diskriminanzanalyse
  Author: Stephan Weibelzahl
  Type: Standard
  Organization: PFH Private Hochschule Göttingen
  Version: 0.2
  
# Begrüssung  
- Class: text
  Output: Willkommen zum interaktiven R-Kurs der PFH.

# Datensatz  
- Class: text
  Output: In der Speicheranzeige/Environment finden Sie den Datensatz "daten". Das Datenbeispiel orientiert sich an Schmidt (2010), "Training zu Entwicklung der Beschäftigungsfähigkeit - Evaluation eines innovativen Programms zur Unterstützung junger Arbeitsloser".
    
# Datensatz
- Class: text
  Output: Insgesamt wurden 90 junge Personen hinsichtlich ihrer Ansprüche an einen zukünftigen Arbeitsplatz und ihrer Kompetenz- und Kontrollüberzeugungen befragt. Zunächst werden die Daten genauer betrachtet, bevor eine Diskriminanzanalyse durchgeführt wird.
  
  
# Deskriptive Auswertung
- Class: cmd_question
  Output: Verschaffen Sie sich einen Überblick über die Struktur der Daten. Nutzen Sie dazu den Befehl str()
  CorrectAnswer: str(daten)
  AnswerTests: omnitest(correctExpr="str(daten)")
  Hint: Geben Sie folgenden Code ein str(daten)
  
# Deskriptive Auswertung
- Class: cmd_question
  Output: Für die folgende Analyse ist die Gruppierungsvariable "gruppe" wichtig. Lassen Sie sich die Werte dieser Variable mit Hilfe des $-Operators anzeigen.
  CorrectAnswer: daten$gruppe
  AnswerTests: omnitest(correctVal='daten$gruppe')
  Hint: Geben Sie folgenden Code ein daten$gruppe


- Class: cmd_question
  Output: Erstellen Sie mit hilfe des Befehls table() eine Tabelle aus der die Anzahl der Probanden in den jeweiligen Maßnahmen ersichtlich wird. Die Daten sind in der soeben ausgewählten Gruppenvariable "gruppe" abgespeichert.
  CorrectAnswer: table(daten$gruppe)
  AnswerTests: omnitest(correctVal='table(daten$gruppe)')
  Hint: Geben Sie folgenden Code ein table(daten$gruppe)

# Annahmen

- Class: text
  Output: Für die Diskriminanzanalyse soll untersucht werden, inwieweit die Variablen "zutsp_3" (Ansprüche an den Tätigkeitsspielraum), "zuanf_3" (Ansprüche an die Anforderungsvielfalt), "zutrs_3" (Ansprüche an die Transparenz) und "zuflg_3" (Ansprüche an die Lernhaltigkeit) einen Einfluss auf die Gruppenzugehörigkeit der Individuen ausüben.

# Inferenzstatistik
- Class: cmd_question
  Output: Zunächst soll untersucht werden, ob die Normalverteilungsannahme für die Variable "zutsp_3" gerechtfertigt ist. Erstellen Sie hierzu ein Histogramm der Variable mithilfe des Befehls hist(). Setzen Sie dabei das Argument freq=FALSE.
  CorrectAnswer: hist(daten$zutsp_3, freq=FALSE)
  AnswerTests: omnitest(correctVal='hist(daten$zutsp_3, freq=FALSE)')
  Hint: Geben Sie folgenden Code ein hist(daten$zutsp_3, freq=FALSE)

# Datensatz
- Class: text
  Output: Bevor Sie dem Histogramm eine Gausssche Glockenkurve hinzufügen, berechnen Sie als Vorbereitung den Mittelwert und die Standardabweichung der Variabe "zutsp_3".

# Inferenzstatistik
- Class: cmd_question
  Output: Speichern Sie den Standardabweichung der Variable "zutsp_3" in der Variable "sd1" ab. Sie können hierfür den Befehl sd() verwenden. 
  CorrectAnswer: sd1 <- sd(daten$zutsp_3)
  AnswerTests: any_of_exprs('sd1 <- sd(daten$zutsp_3)', 'sd1 = sd(daten$zutsp_3)')
  Hint: Geben Sie folgenden Code ein sd1 <- sd(daten$zutsp_3)

- Class: cmd_question
  Output: Speichern Sie den Mittelwert der Variable "zutsp_3" in der Variable "m1" ab. Sie können hierfür den Befehl mean() verwenden.
  CorrectAnswer: m1 <- mean(daten$zutsp_3)
  AnswerTests: any_of_exprs('m1 <- mean(daten$zutsp_3)', 'm1 = mean(daten$zutsp_3)')
  Hint: Geben Sie folgenden Code ein m1 <- mean(daten$zutsp_3)
  
# Inferenzstatistik
- Class: cmd_question
  Output: Fügen Sie dem Histogramm eine Gausssche Glockenkurve hinzu. Nutzen Sie dazu den Befehl curve() in Zusammenhang mit dem Befehl dnorm(). Für dnorm() verwenden sie als Parameter x, m1 und sd1. Um die Kurve dem bestehenden Histogramm hinzuzufügen, verwenden sie für die Funktion curve den zusätzlichen Parameter add=TRUE.
  CorrectAnswer: curve(dnorm(x, mean = m1, sd = sd1), add = TRUE)
  AnswerTests: any_of_exprs('curve(dnorm(x, mean = m1, sd = sd1), add = TRUE)')
  Hint: Geben Sie folgenden Code ein curve(dnorm(x, mean = m1, sd = sd1), add = TRUE)
  
# Inferenzstatistik  
- Class: mult_question
  Output: Welche der folgenden Voraussetzungen ist für die Diskriminanzanalyse nicht erforderlich?
  AnswerChoices:  Die Erwartungswerte der Variablen müssen gleich sein; Die Kovarianzmatrix der Variablen muss homogen sein; Die Variablen müssen normalverteilt sein;
  CorrectAnswer:  Die Erwartungswerte der Variablen müssen gleich sein
  AnswerTests: omnitest(correctVal='Die Erwartungswerte der Variablen müssen gleich sein')
  Hint: Die Erwartungswerte der Variablen müssen nicht gleich sein um eine Diskriminanzanalyse durchzuführen.
  
# Fehlende Werte
- Class: text
  Output: Obwohl die Variable nicht einer Normalverteilung zu folgen scheint, wird im Folgenden dennoch eine Diskriminanzanalyse durchgeführt. Um eine Diskriminanzanalyse durchzuführen, muss zunächst das dazugehörige lineare Modell aufgestellt werden. Dafür wird zunächst die Matrix der abhängigen Variable erstellt.

# Fehlender Werte
- Class: cmd_question
  Output: Führen Sie die abhängigen Variablen "zutsp_3", "zuanf_3", "zutrs_3" und "zuflg_3" mit dem Befehl cbind() in einer Matrix zusammen. Speichern Sie das Ergebnis in der Variable "abhvar".
  CorrectAnswer: abhvar <- cbind(daten$zutsp_3, daten$zuanf_3, daten$zutrs_3, daten$zuflg_3)
  AnswerTests: any_of_exprs('abhvar <- cbind(daten$zutsp_3, daten$zuanf_3, daten$zutrs_3, daten$zuflg_3)', 'abhvar = cbind(daten$zutsp_3, daten$zuanf_3, daten$zutrs_3, daten$zuflg_3)')
  Hint: Geben Sie folgenden Code ein abhvar <- cbind(daten$zutsp_3, daten$zuanf_3, daten$zutrs_3, daten$zuflg_3)

  
# Fehlender Werte
- Class: cmd_question
  Output: Stellen Sie mithilfe der Funktion lm() ein lineares Modell auf mit der abhängigen Variablen "abhvar", sowie der Gruppierungsvariable "daten$gruppe". Speichern Sie das Ergebnis in der Variable "model".
  CorrectAnswer: model <- lm(abhvar ~ daten$gruppe)
  AnswerTests: any_of_exprs('model <- lm(abhvar ~ daten$gruppe)', 'model = lm(abhvar ~ daten$gruppe)')
  Hint: Geben Sie folgenden Code ein model <- lm(abhvar ~ daten$gruppe)
  
# Inferenzstatistik
- Class: cmd_question
  Output: Berechnen Sie mit dem Befehl candisc() und der Variable "model" die lineare Diskriminanzanalyse. Speichern Sie das Ergebnis in der Variable "can".
  CorrectAnswer: can <- candisc(model)
  AnswerTests: any_of_exprs('can <- candisc(model)', 'can = candisc(model)')
  Hint: Geben Sie folgenden Code ein can <- candisc(model)
  
# Inferenzstatistik
- Class: cmd_question
  Output: Lassen Sie sich das Ergebnis der Diskriminanzanalyse in der Variable "can" anzeigen.
  CorrectAnswer: can
  AnswerTests: omnitest(correctVal='can')
  Hint: Geben Sie folgenden Code ein can
  
# Inferenzstatistik  
- Class: mult_question
  Output: Welche der folgenden Aussagen ist falsch?
  AnswerChoices:  Die erste Diskriminanzfunktion hat einen Eigenwert von 0.2183; Der zweite kanonische Korrelationskoeffizient ist signifikant, da der dazugehörige Eigenwert größer als 0 ist; Der erste kanonische Korrelationskoeffizient ist signifikant, da der dazugehörige p-Wert kleiner als 0.05 ist; Die erste Diskriminanzfunktion hat einen größeren Erklärungswert als die zweite Diskriminanzfunktion;
  CorrectAnswer:  Der zweite kanonische Korrelationskoeffizient ist signifikant, da der dazugehörige Eigenwert größer als 0 ist
  AnswerTests: omnitest(correctVal='Der zweite kanonische Korrelationskoeffizient ist signifikant, da der dazugehörige Eigenwert größer als 0 ist')
  Hint: Der zweite kanonische Korrelationskoeffizient ist nicht signifikant, da der dazugehörige p-Wert größer als 0.05 ist
  
# Inferenzstatistik
- Class: cmd_question
  Output: Lassen Sie sich die Strukturkoeffizienten der Diskriminanzanalyse ausgeben. Geben Sie dazu den Code can$structure ein.
  CorrectAnswer: can$structure
  AnswerTests: omnitest(correctVal='can$structure')
  Hint: Geben Sie folgenden Code ein can$structure


# Inferenzstatistik  
- Class: mult_question
  Output: Aus den Strukturkoeffizienten wird deutlich, dass...
  AnswerChoices:  Die Variable zutrs_3 einen Einfluss auf die zweite Diskriminanzfunktion ausübt; Die Variable zutsp_3 einen Einfluss auf die erste Diskriminanzfunktion ausübt; Der erste kanonische Korrelationskoeffizient signifikant ist; Der zweite kanonische Korrelationskoeffizient signifikant ist;
  CorrectAnswer:  Die Variable zutsp_3 einen Einfluss auf die erste Diskriminanzfunktion ausübt
  AnswerTests: omnitest(correctVal='Die Variable zutsp_3 einen Einfluss auf die erste Diskriminanzfunktion ausübt')
  Hint: Aus den Strukturkoeffizienten wird deutlich, dass die Variable zutsp_3 einen Einfluss auf die erste Diskriminanzfunktion ausübt

    # Ende
- Class: text
  Output: In diesem Kapitel haben Sie gelernt eine Diskriminanzanalyse durchzuführen und zu interpretieren. Sie haben dieses Kapitel nun erfolgreich abgeschlossen.
