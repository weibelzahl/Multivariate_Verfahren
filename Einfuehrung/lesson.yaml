- Class: meta
  Course: Multivariate Verfahren
  Lesson: Einführung
  Author: PFH
  Type: Standard
  Organization: Private Hochschule Göttingen
  Version: 0.1
  
  
# Begrüßung  
- Class: text
  Output: Willkommen zum interaktiven R-Kurs der PFH zu Multivariaten Verfahren. In diesem Kapitel erhalten Sie eine Kurzeinführung in R.
  
- Class: text
  Output: "Im Folgenden sollen Sie einen Datensatz erzeugen, den Sie in diesem Kurs in Hinblick auf einfache deskriptive Statistiken untersuchen werden."
  
  
# Alter Vektor
- Class: cmd_question
  Output: Erstellen Sie einen Vektor "alter" mit den Werten c(21, 24, 25, 37, 22, 29, 31).
  CorrectAnswer: alter = c(21, 24, 25, 37, 22, 29, 31)
  AnswerTests: any_of_exprs('alter = c(21, 24, 25, 37, 22, 29, 31)', 'alter <- c(21, 24, 25, 37, 22, 29, 31)')
  Hint: Die korrekte Antwort lautet "alter <- c(21, 24, 25, 37, 22, 29, 31)"

# Einkommens Vektor
- Class: cmd_question
  Output: Erstellen Sie einen Vektor "einkommen" mit den Werten c(27000, 28000, 25000, 55000, 21000, 35000, 42000).
  CorrectAnswer: einkommen = c(27000, 28000, 25000, 55000, 21000, 35000, 42000)
  AnswerTests: any_of_exprs('einkommen = c(27000, 28000, 25000, 55000, 21000, 35000, 42000)', 'einkommen <- c(27000, 28000, 25000, 55000, 21000, 35000, 42000)')
  Hint: Die korrekte Antwort lautet "einkommen <- c(27000, 28000, 25000, 55000, 21000, 35000, 42000)"


# Erstelle Daten-Frame
- Class: cmd_question
  Output: Erstellen Sie einen Datenframe "daten" mit den Variablen alter und einkommen. Benutzen Sie den data.frame() Befehl. 
  CorrectAnswer: daten <- data.frame(alter, einkommen)
  AnswerTests: any_of_exprs('daten = data.frame(alter, einkommen)', 'daten <- data.frame(alter, einkommen)')
  Hint: Die korrekte Antwort lautet 'daten <- data.frame(alter, einkommen)'"





- Class: text
  Output: "Bevor Daten mit Hilfe verschiedener Verfahren analysiert werden können, sollte als erstes ein Überblick über die Daten gewonnen werden."

- Class: cmd_question
  Output: Überprüfen Sie wie viele NAs im Datensatz vorhanden sind. Dazu können Sie die Befehle is.na() und sum() verwenden.
  CorrectAnswer: sum(is.na(daten))
  AnswerTests: omnitest(correctExpr='sum(is.na(daten))', correctVal= sum(is.na(daten)))
  Hint: Die korrekte Antwort lautet "sum(is.na(daten))"

# Übersicht der Daten
- Class: cmd_question
  Output: Verschaffen Sie sich einen Überblick über den Datenframe "daten" mit dem summary() Befehl.
  CorrectAnswer: summary(daten)
  AnswerTests: omnitest(correctExpr='summary(daten)', correctVal= summary(daten))
  Hint: Die korrekte Antwort lautet "summary(daten)"

- Class: text
  Output: "Es folgen einige Verständnisfragen zu dem Output des summary() Befehls."

- Class: mult_question
  Output: Das durchschnittliche Alter beträgt 25. 
  AnswerChoices:  Ja; Nein
  CorrectAnswer:  Nein
  AnswerTests: omnitest(correctVal='Nein')
  Hint: Die korrekte Antwort lautet "Nein". 

- Class: mult_question
  Output: Kein Proband verdient mehr als 60.000 im Jahr. 
  AnswerChoices:  Ja; Nein
  CorrectAnswer:  Ja
  AnswerTests: omnitest(correctVal='Ja')
  Hint: Die korrekte Antwort lautet "Ja". 

- Class: mult_question
  Output: Alle Probanden sind volljährig. 
  AnswerChoices:  Ja; Nein
  CorrectAnswer:  Ja
  AnswerTests: omnitest(correctVal='Ja')
  Hint: Die korrekte Antwort lautet "Ja". 

- Class: text
  Output: "Neben den sogenannten Lageparameter aus dem summary-Befehl, sind auch Streuungsparameter wie die Varianz von Interesse."

- Class: mult_question
  Output: Ohne Berechnung lässt sich vermuten, dass folgende Variable eine höhere Varianz aufweist. 
  AnswerChoices:  alter; einkommen
  CorrectAnswer:  einkommen
  AnswerTests: omnitest(correctVal='einkommen')
  Hint: Die korrekte Antwort lautet "Menschen können kaum älter als 100 Jahre werden, aber sie können mehrere Millionen und mehr verdienen.". 
  
- Class: cmd_question
  Output: Überprüfen Sie Ihre Vermutung mit einer logischen Abfrage. Für den Mittelwert würde der Test folgendermaßen aussehen. "mean(einkommen)>mean(alter)"
  CorrectAnswer: var(einkommen)>var(alter)
  AnswerTests: omnitest(correctExpr='var(einkommen)>var(alter)', correctVal= var(einkommen)>var(alter))
  Hint: Die korrekte Antwort lautet "var(einkommen)>var(alter)"

- Class: text
  Output: "Zum Abschluss werden Fragen zu den Grundlagen der Datenmanipulation geprüft."

# Vektor erstellen
- Class: mult_question
  Output: Einen Vektor mit den Zahlen von 1 bis 10 erhalten Sie mit folgendem Befehl. (Bedenken Sie "rep steht für repetition, und [-1] entfernt den ersten Eintrag, (seq() und 1:5 sind korrekte Befehle)")
  AnswerChoices:  sec(1,10); 1::10; rep(1, 10); seq(0,10)[-1]
  CorrectAnswer:  seq(0,10)[-1]
  AnswerTests: omnitest(correctVal='seq(0,10)[-1]')
  Hint: Die korrekte Antwort lautet "Es gibt keinen sec()-Befehl, rep() steht für repitition - Wiederholung, '::' ist kein gültiger Ausdruck."

# Vektor erstellen
- Class: mult_question
  Output: Variablen mit unterschiedlicher Länge können nicht,...
  AnswerChoices: Zusammengefasst werden in einem Datenframe ; Zusammengefasst werden in einer Matrix;    
  CorrectAnswer:  Zusammengefasst werden in einer Matrix
  AnswerTests: omnitest(correctVal='Zusammengefasst werden in einer Matrix')
  Hint: Die korrekte Antwort lautet "Eine Matrix hat in jeder Spalte, die gleiche Zeilenanzahl und in jeder Zeile, die gleiche Spaltenzahl."

# Zusammenfassung des Kapitels:
- Class: text
  Output: "In diesem Kapitel haben Sie gelernt, Vektoren und Datenframes zu erzeugen. Sie haben fehlende Datenpunkte identifiziert und sich mit R-Befehlen sowie logischen Abfragen einen Überblick über die Daten verschaffen können. Sie haben dieses Kapitel nun erfolgreich abgeschlossen."


