- Class: meta
  Course: PFH - Multivariate Verfahren IV
  Lesson: Multivariate Verfahren IV
  Author: PFH
  Type: Standard
  Organization: Private Hochschule Goettingen
  Version: 0.1
  
  
# Begruessung  
- Class: text
  Output: Willkommen zum interaktiven R-Kurs der PFH.

# Datensatz  
- Class: text
  Output: In der Speicheranzeige/Environment finden Sie den Datensatz "daten". Es handelt sich dabei um Daten von Opfern schwerer Verkehrsunfaelle, die hinsichtlich einiger physiologischer Parameter untersucht wurden.
  
  
# Datensatz
- Class: text
  Output: Den Probanden wurden jeweils 120 Bilder gezeigt, die aus vier inhaltlichen Kategorien stammten (positiv, neutral, negativ und traumarelevant). Es soll nun untersucht werden, ob Probanden mit einer posstraumatischen Belastungsstoerung (PTSD) andere Reaktionen zeigen als Probanden ohne PTSD.
  
# Deskriptive Auswertung
- Class: cmd_question
  Output: Verschaffen Sie sich einen Ueberblick ueber die Struktur der Daten. Nutzen Sie dazu den Befehl str()
  CorrectAnswer: str(daten)
  AnswerTests: omnitest(correctExpr="str(daten)")
  Hint: Geben Sie folgenden Code ein str(daten)
  
# Deskriptive Auswertung
- Class: cmd_question
  Output: Fuer die folgende Analyse ist die Gruppierungsvariable "ptsd" wichtig. Lassen Sie sich die Werte dieser Variable mit Hilfe des $-Operators anzeigen.
  CorrectAnswer: daten$ptsd
  AnswerTests: omnitest(correctVal='daten$ptsd')
  Hint: Geben Sie folgenden Code ein daten$ptsd


- Class: cmd_question
  Output: Erstellen Sie mit Hilfe des Befehls table() eine Tabelle aus der die Anzahl an PTSD Probanden und gesunden Probanden ersichtlich wird. Die Daten sind in der soeben ausgewaehlten Gruppenvariable "ptsd" abgespeichert.
  CorrectAnswer: table(daten$ptsd)
  AnswerTests: omnitest(correctVal='table(daten$ptsd)')
  Hint: Geben Sie folgenden Code ein table(daten$ptsd)


# Inferenzstatistik
- Class: text
  Output: Es soll nun untersucht werden, ob die Valenz abhaengig von der Diagnose verschieden ist. Dazu wird zunaechst getestet ob die Variable "valpos" (steht fuer Valenz Positiv) im Mittel verschieden ist fuer Probanden mit und ohne PTSD.
  
# Inferenzstatistik
- Class: cmd_question
  Output: Lassen Sie sich deskriptive Werte der Variable "valpos" mit Hilfe der summary()-Funktion ausgeben.
  CorrectAnswer: summary(daten$valpos)
  AnswerTests: omnitest(correctVal='summary(daten$valpos)')
  Hint: Geben Sie folgenden Code ein summary(daten$valpos)
  
# Inferenzstatistik  
- Class: mult_question
  Output: Gibt es fehlende Werte in der Variable "valpos"?
  AnswerChoices:  Ja, 9 Werte fehlen; Ja, 90.50 Werte fehlen; Nein;
  CorrectAnswer:  Ja, 9 Werte fehlen
  AnswerTests: omnitest(correctVal='Ja, 9 Werte fehlen')
  Hint: In R werden Fehlende Werte als NA's bezeichnet. 
  
# Fehlende Werte
- Class: text
  Output: Eine Varianzanalyse mit fehlenden Werten ist mit Hilfe des Befehls ezANOVA() nicht moeglich. Im Vorfeld muss entweder eine Imputation von Werten, oder ein Ausschluss der fehlenden Faelle stattfinden.
  
# Fehlender Werte
- Class: cmd_question
  Output: Erstellen Sie einen Dataframe "daten.sub" mit den Variablen "pb", "ptsd" und "valpos". Geben Sie dazu folgenden Befehl ein daten.sub <- data.frame(pb = daten$pb, ptsd = daten$ptsd, valpos = daten$valpos)
  CorrectAnswer: daten.sub <- data.frame(pb = daten$pb, ptsd = daten$ptsd, valpos = daten$valpos)
  AnswerTests: any_of_exprs('daten.sub <- data.frame(pb = daten$pb, ptsd = daten$ptsd, valpos = daten$valpos)', 'daten.sub = data.frame(pb = daten$pb, ptsd = daten$ptsd, valpos = daten$valpos)')
  Hint: Geben Sie folgenden Code ein daten.sub <- data.frame(pb = daten$pb, ptsd = daten$ptsd, valpos = daten$valpos)
  
# Fehlender Werte
- Class: cmd_question
  Output: Entfernen Sie alle fehlenden Beobachtungen aus dem Dataframe "daten.sub" mit Hilfe der Funktion na.omit(). Speichern Sie den Datensatz mit den vollstaendigen Beobachtungen in der Variable "daten.complete".
  CorrectAnswer: daten.complete <- na.omit(daten.sub)
  AnswerTests: any_of_exprs('daten.complete <- na.omit(daten.sub)', 'daten.complete = na.omit(daten.sub)')
  Hint: Geben Sie folgenden Code ein daten.complete <- na.omit(daten.sub)
 
# Fehlende Werte
- Class: text
  Output: Nachdem alle fehlenden Werte entfernt wurden, kann jetzt die Varianzanalyse mit dem Datensatz "daten.complete" durchgefuehrt werden.
  
# Inferenzstatistik
- Class: cmd_question
  Output: Untersuchen Sie mit Hilfe der Funktion ezANOVA() ob ein signifikanter Unterschied zwischen den Gruppen PTSD und kein PTSD hinsichtlich der Variable "valpos" besteht. Nehmen Sie dazu die Variable "valpos" als abhaengige Variable und die Gruppierungsvariable "ptsd" als between Faktor. Die Probandennummer ist in der Variable "pb" gespeichert. Als Daten verwenden Sie "daten.complete".
  CorrectAnswer: ezANOVA(dv = valpos, between = ptsd, wid = pb, data = daten.complete)
  AnswerTests: omnitest(correctVal='ezANOVA(dv = valpos, between = ptsd, wid = pb, data = daten.complete)')
  Hint: Geben Sie folgenden Code ein ezANOVA(dv = valpos, between = ptsd, wid = pb, data = daten.complete)
  
# Inferenzstatistik  
- Class: mult_question
  Output: Koennen Sie hinsichtlich der Variable "valpos" einen signifikanten Unterschied zwischen Probanden mit und ohne PTSD feststellen?
  AnswerChoices:  Ja, der F-Wert ist besonders klein; Ja, der p-Wert ist kleiner als 0.05; Nein, der p-Wert ist groesser als 0.05; Nein, der F-Wert ist besonders hoch;
  CorrectAnswer:  Nein, der p-Wert ist groesser als 0.05
  AnswerTests: omnitest(correctVal='Nein, der p-Wert ist groesser als 0.05')
  Hint: Der Unterschied ist nicht signifikant da der p-Wert groesser als 0.05 ist.

# Fehlende Werte
- Class: text
  Output: Nun soll nicht nur der Unterschied bezueglich der Variable "Valpos" untersucht werden, sondern ein Unterschied in der Valenz allgemein. Dazu muss der Datensatz zunaechst vom wide-Format in das long-Format umgewandelt werden.

# Inferenzstatistik
- Class: cmd_question
  Output: Fuegen Sie dem Datensatz "daten.sub" weiter die Variablen "valneu" (Valenz neutral), "valneg" (Valenz negativ) und "valtra" (Valenz Trauma) hinzu. Geben Sie dazu folgenden Befehl ein daten.sub <- data.frame(daten.sub, valneu = daten$valneu, valneg = daten$valneg, valtra = daten$valtra)
  CorrectAnswer: daten.sub <- data.frame(daten.sub, valneu = daten$valneu, valneg = daten$valneg, valtra = daten$valtra)
  AnswerTests: any_of_exprs('daten.sub <- data.frame(daten.sub, valneu = daten$valneu, valneg = daten$valneg, valtra = daten$valtra)', 'daten.sub = data.frame(daten.sub, valneu = daten$valneu, valneg = daten$valneg, valtra = daten$valtra)')
  Hint: Geben Sie folgenden Code ein daten.sub <- data.frame(daten.sub, valneu = daten$valneu, valneg = daten$valneg, valtra = daten$valtra)

# Inferenzstatistik
- Class: cmd_question
  Output: Entfernen Sie alle fehlenden Werte aus dem Datensatz "daten.sub" mit Hilfe der Funktion na.omit() und speichern das Ergebnis in der Variable "daten.complete".
  CorrectAnswer: daten.complete <- na.omit(daten.sub)
  AnswerTests: any_of_exprs('daten.complete <- na.omit(daten.sub)', 'daten.complete = na.omit(daten.sub)')
  Hint: Geben Sie folgenden Code ein daten.complete <- na.omit(daten.sub)
  
# Inferenzstatistik
- Class: cmd_question
  Output: Wandeln Sie mit Hilfe der melt() Funktion den Datensatz "daten.complete" in das long-Format um. Speichern Sie das Ergebnis in der Variable "daten.complete.long". Geben Sie dazu folgenden Code ein daten.complete.long <- melt(daten.complete, id.var=c("pb", "ptsd"), variable.name="valenz", value.name="wert")
  CorrectAnswer: daten.complete.long <- melt(daten.complete, id.var=c("pb", "ptsd"), variable.name="valenz", value.name="wert")
  AnswerTests: any_of_exprs('daten.complete.long <- melt(daten.complete, id.var=c("pb", "ptsd"), variable.name="valenz", value.name="wert")', 'daten.complete.long = melt(daten.complete, id.var=c("pb", "ptsd"), variable.name="valenz", value.name="wert")')
  Hint: Geben Sie folgenden Code ein daten.complete.long <- melt(daten.complete, id.var=c("pb", "ptsd"), variable.name="valenz", value.name="wert")
  
# Fehlende Werte
- Class: text
  Output: Jetzt sind die Daten im long-Format gespeichert und die fehlenden Werte wurden entfernt. Damit ist es moeglich eine Varianzanalyse mit Messwiederholungen durchzufuehren.
  
# Inferenzstatistik
- Class: cmd_question
  Output: Untersuchen Sie mit Hilfe der Funktion ezANOVA() ob hinsichtlich der Valenz ein Unterschied zwischen den Probanden mit PTSD und gesunden Probanden besteht. Nehmen Sie dazu als within Faktor die Variable "valenz" und als abhaengige Variable "wert". 
  CorrectAnswer: ezANOVA(dv = wert, between = ptsd, wid = pb, within = valenz, data = daten.complete.long)
  AnswerTests: omnitest(correctVal='ezANOVA(dv = wert, between = ptsd, wid = pb, within = valenz, data = daten.complete.long)')
  Hint: Geben Sie folgenden Code ein ezANOVA(dv = wert, between = ptsd, wid = pb, within = valenz, data = daten.complete.long)
  
# Inferenzstatistik  
- Class: mult_question
  Output: Welcher Effekt beschreibt einen Unterschied in der Valenz, abhaengig von der Behandlungsgruppe PTSD und nicht PTSD?
  AnswerChoices:  Der Haupteffekt ptsd; Der Haupteffekt valenz; Die Wechselwirkung "ptsd:valenz"; Bei einer signifikanten Wechselwirkung sind die Haupteffekte nicht interpretierbar;
  CorrectAnswer:  Die Wechselwirkung ptsd:valenz
  AnswerTests: omnitest(correctVal='Die Wechselwirkung "ptsd:valenz"')
  Hint: Eine signifikante Wechselwirkung wuerde die Hypothese unterstreichen.

# Inferenzstatistik  
- Class: mult_question
  Output: Gab es einen signifikanten Effekt?
  AnswerChoices:  Der Haupteffekt ptsd war signifikant; Die Wechselwirkung ptsd:valenz war signifikant; Der Haupteffekt valenz war signifikant; Keine signifikanten Unterschiede wurden beobachtet;
  CorrectAnswer:  Der Haupteffekt valenz war signifikant
  AnswerTests: omnitest(correctVal='Der Haupteffekt valenz war signifikant')
  Hint: Der Haupteffekt valenz war signifikant mit einem p-Wert < 0.05.

# Inferenzstatistik  
- Class: mult_question
  Output: Mauchly's Test auf Sphaerizitaet war signifikant und die Sphaerizitaetsannahme nicht damit nicht erfuellt. Ein moeglicher Grund ist...
  AnswerChoices:  die Varianzen der verschiedenen Valenzarten sind unterschiedlich; die Varianzen der verschiedenen Valenzarten sind gleich; die Mittelwerte der verschiedenen Valenzarten sind unterschiedlich; die Mittelwerte der verschiedenen Valenzarten sind gleich;
  CorrectAnswer:  die Varianzen der verschiedenen Valenzarten sind unterschiedlich
  AnswerTests: omnitest(correctVal='die Varianzen der verschiedenen Valenzarten sind unterschiedlich')
  Hint: Sind die Varianzen der Valenzarten verschieden fuehrt dies zu einer signifikanten Sphaerizitaet.

# Inferenzstatistik  
- Class: mult_question
  Output: Wenn die Sphaerizitaetsannahme nicht erfuellt ist sollte man...
  AnswerChoices:  Auf die Varianzanalyse als Auswertungsmethode verzichten; Die Teststatistik von Huynh-Feldt oder Greenhouse-Geiser verwenden; Den Kolmogorov-Smirnov Test im Vorfeld durchfuehren; Die Werte zunaechst standardisieren;
  CorrectAnswer:  Die Teststatistik von Huynh-Feldt oder Greenhouse-Geiser verwenden
  AnswerTests: omnitest(correctVal='Die Teststatistik von Huynh-Feldt oder Greenhouse-Geiser verwenden')
  Hint: Es wird empfohlen die abgebildete Teststatistik von Huynh-Feldt oder Greenhouse-Geiser stattdessen zu verwenden.

# Ende
- Class: text
  Output: In diesem Kapitel haben Sie gelernt eine Varianzanalyse durchzufuehren, sowie die Daten fuer diese anzupassen. Sie haben dieses Kapitel nun erfolgreich abgeschlossen.


  


